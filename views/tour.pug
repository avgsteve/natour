//- This file gets basic template from base.pug by "extends" and rewrite
extends base

//- And get data from the data filed in viewRoutes.js with the middle ware function
//- exports.getTour = catchAsync(async (req, res, next) => {
//- res.status(200).render('tour', {
//-   tour: tour,
//- });

//- To append the content after the existing content (in the "block head" section of base.pug)
block append head
  // ======= HTML FILE GENERATED FROM tour.pug =======
  
  //- cdn for using mapbox
  script(src='https://api.mapbox.com/mapbox-gl-js/v1.11.0/mapbox-gl.js')
  link(href='https://api.mapbox.com/mapbox-gl-js/v1.11.0/mapbox-gl.css' rel='stylesheet')

//-
mixin overviewBox(label, text, icon)
  .overview-box__detail
    svg.overview-box__icon
      use(xlink:href=`/img/icons.svg#icon-${icon}`)
    span.overview-box__label= label
    span.overview-box__text= text

//- import module _reviewCard from file: _reviewCard.pug
//- to use its mixin function reviewCard(review) and this will be used as +reviewCard(reviews) in the review code section
include _reviewCard

//- use the block with variable name "content" and rewrite the content in the block
//- and this makes overview.pug a parent file of the base.pug
block content
  //- section.test= `${tour}`
  section.section-header
    .header__hero
      .header__hero-overlay &nbsp;
      img.header__hero-img(src=`/img/tours/${tour.imageCover}`, alt=`${tour.name}`)
    
    //- .header__hero
    //-   .header__hero-overlay &nbsp;
    //-   img.header__hero-img(src=`/img/tours/${tour.imageCover}`, alt=`${tour.name}`)

      //- img.header__hero-img(src="/img/tours/tour-2-cover.jpg", alt="tour cover")


    .heading-box
      h1.heading-primary
        span= `${tour.name} tour`
      .heading-box__group
        .heading-box__detail
          svg.heading-box__icon
            use(xlink:href='/img/icons.svg#icon-clock')
          span.heading-box__text= `${tour.duration} days`
        .heading-box__detail
          svg.heading-box__icon
            use(xlink:href='/img/icons.svg#icon-map-pin')
          span.heading-box__text= `${tour.startLocation.description}`

  section.section-description
    
    //-
    .overview-box
      div        
        //- ===== Use mixin to render data =====
        .overview-box__group
          
          h2.heading-secondary.ma-bt-lg Quick facts
                                      
          //- use "date" variable and mixin "overviewBox" and arguments to create sub-section inside "overview-box__group"
          
          //- ========================================================
          //- JavaScript syntax for "date" variable
          - const date = tour.startDates[0].toLocaleDateString('en-us', {month: 'long', year: 'numeric'});
          
          //- ========================================================
          //- mixin "overviewBox" for sub-section
          +overviewBox('Next date', date, 'calendar')          
          //- .overview-box__detail
          //-   svg.overview-box__icon
          //-     use(xlink:href='/img/icons.svg#icon-calendar')
          //-   span.overview-box__label Next date
          //-   span.overview-box__text August 2021
            
          //- 
          +overviewBox('Difficulty', tour.difficulty, 'trending-up')
          //- .overview-box__detail
          //-   svg.overview-box__icon
          //-     use(xlink:href='/img/icons.svg#icon-trending-up')
          //-   span.overview-box__label Difficulty
          //-   span.overview-box__text Medium
          
          //-
          +overviewBox('Participants', `${tour.maxGroupSize} people`, 'user')                
          //- .overview-box__detail
          //-   svg.overview-box__icon
          //-     use(xlink:href='/img/icons.svg#icon-user')
          //-   span.overview-box__label Participants
          //-   span.overview-box__text 10 people
          
          //- 
          +overviewBox('Participants', `${tour.ratingsAverage} / 5`, 'star')     
          //- .overview-box__detail
          //-   svg.overview-box__icon
          //-     use(xlink:href='/img/icons.svg#icon-star')
          //-   span.overview-box__label Rating
          //-   span.overview-box__text 4.9 / 5
        
        //- ===== Loop through tour.guides data =====
        .overview-box__group
          h2.heading-secondary.ma-bt-lg Your tour guides      
          
          //- Use each loop to loop through the data in guide fields
          each guide in tour.guides
          
            //- Note that the content in "each" loop must indent one level deeper
            .overview-box__detail
              img.overview-box__img(src=`/img/users/${guide.photo}`, alt=`${guide.name}`)
                
              //- Using JavaScript syntax for "if conditions" (and need to indent one level deeper) 
              - if (guide.role === 'lead-guide')
                span.overview-box__label Lead guide

              - if (guide.role === 'guide')
                span.overview-box__label Tour guide

              span.overview-box__text= guide.name
              
    //- DESCRIPTION SECTION FOR tour name and details
    .description-box
      h2.heading-secondary.ma-bt-lg= `About ${tour.name} tour` 
      
      //-Use \n and .split to create seperated content in Array
      -const paragraphs = tour.description.split('\n');
      
      //-Then loop through the array to create repeated blocks as seperated paragraphs
      each singleParagraph in paragraphs
        p.description__text= singleParagraph
      
      //- p.description__text Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur.
      //- p.description__text Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum!

  //- ===== TOUR IMAGES =====
  section.section-pictures
    //- use "each" and "img" for looping through the array. "i" is the index
    each img, i in tour.images
      .picture-box
        img.picture-box__img(src=`/img/tours/${img}`, alt='The Park Camper Tour ${i+1}', class=`picture-box__img--${i+1}`)  
       
    //- .picture-box
    //-   img.picture-box__img.picture-box__img--1(src='/img/tour-5-1.jpg', alt='The Park Camper Tour 1')
    //- .picture-box
    //-   img.picture-box__img.picture-box__img--2(src='/img/tour-5-2.jpg', alt='The Park Camper Tour 1')
    //- .picture-box
    //-   img.picture-box__img.picture-box__img--3(src='/img/tour-5-3.jpg', alt='The Park Camper Tour 1')


  section.section-map
    //- section.section-map will be rendered as <div id="map">
    //- Use JSON.stringify to make data in JSON format for later process
    #map(data-locations=`${JSON.stringify(tour.locations)}`)

  //- ===== REVIEW FROM OTHER USERS =====
  section.section-reviews
    .reviews
      //- loop through reviews data inside the .reviews section
      //- each review in tour.reviews
      each review in tour.reviews_Populated
        //- Use the module "reviewCard" from the code: include _reviewCard
        //- to generate multiple cards
        +reviewCard(review)

  section.section-cta
    .cta
      .cta__img.cta__img--logo
        img(src='/img/logo-white.png', alt='Natours logo')
      img.cta__img.cta__img--1(src=`/img/tours/${tour.images[1]}`, alt='Tour picture')
      img.cta__img.cta__img--2(src=`/img/tours/${tour.images[2]}`, alt='Tour picture')
      .cta__content
        h2.heading-secondary What are you waiting for?
        //- p.cta__text 10 days. 1 adventure. Infinite memories. Make it yours today!
        p.cta__text=`${tour.duration} days. 1 adventure. Infinite memories. Make it yours today!`
        

        //- If there's no user logged in, use this button to ask user to log in
        if user  

          //- use attribute (data-tour-id=`${tour.id}`) to let route handler access this tour's id because this html pug file is rendered by viewsController.getTour function
          button.btn.btn--green.span-all-rows#book-tour(data-tour-id=`${tour.id}`) Book tour now!
          // Check out addEventListener for "bookBtn" and function in stripe.js
          
        else
                    
          a.button.btn.btn--green.span-all-rows(href='/login') Log in to book this tour!

          
          
          
          
          